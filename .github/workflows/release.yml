name: Release
# This workflow handles automatic version incrementing and release creation

on:
  # Triggers on push to main branch
  push:
    branches:
      - main
  # Allows manual triggering with version choice
  workflow_dispatch:
    inputs:
      version_increment:
        description: 'Version increment type'
        required: true
        default: 'patch'
        type: choice
        options:
          # User-friendly version increment options
          # These will be mapped to the action's expected values:
          # - patch -> bug (for small fixes)
          # - feature -> feature (for minor version bumps)
          # - major -> major (for breaking changes)
          - patch
          - feature
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # Checkout code with full history for proper versioning
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Install yq for YAML parsing
      # We use yq instead of jq because our version is in a YAML file
      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      # Extract current version from config.yaml
      # yq properly handles YAML format, whether version is quoted or not
      - name: Get current version
        id: version
        run: |
          current_version=$(yq eval '.version' config.yaml)
          echo "Current version: $current_version"
          echo "current=$current_version" >> $GITHUB_OUTPUT

      # Map user-friendly version increments to christian-draeger/increment-semantic-version values
      # The action expects: major, feature, bug, alpha, beta, pre, rc
      # We map: patch -> bug, feature -> feature, major -> major
      - name: Determine version increment
        id: determine_increment
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            case "${{ github.event.inputs.version_increment }}" in
              "patch") echo "increment=bug" >> $GITHUB_OUTPUT ;;
              *) echo "increment=${{ github.event.inputs.version_increment }}" >> $GITHUB_OUTPUT ;;
            esac
          else
            echo "increment=bug" >> $GITHUB_OUTPUT
          fi

      # Use the semantic version increment action
      # This action expects specific fragment types: major, feature, bug, alpha, beta, pre, rc
      # That's why we mapped 'patch' to 'bug' in the previous step
      - name: Bump version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.1.0
        with:
          current-version: ${{ steps.version.outputs.current }}
          version-fragment: ${{ steps.determine_increment.outputs.increment }}

      # Update the version in config.yaml with the new version
      # Note: We ensure version is always quoted in the YAML file
      - name: Update version in config.yaml
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.next-version }}"
          sed -i "s/version: \".*\"/version: \"$NEW_VERSION\"/" config.yaml

      - name: Update CHANGELOG.md
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          latest-version: ${{ steps.bump_version.outputs.next-version }}
          release-notes: |
            ## [${{ steps.bump_version.outputs.next-version }}] - ${{ github.event.head_commit.message }}

            For full changelog, see [GitHub releases](${{ github.event.repository.html_url }}/releases)

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add config.yaml CHANGELOG.md
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.next-version }}"
          git tag -a "v${{ steps.bump_version.outputs.next-version }}" -m "Release v${{ steps.bump_version.outputs.next-version }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.bump_version.outputs.next-version }}"
          name: "Release v${{ steps.bump_version.outputs.next-version }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
